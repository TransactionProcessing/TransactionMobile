name: .NET MAUI UI Tests on iOS Simulator

on:
  pull_request:
    branches:
      - main

jobs:
  ios-tests:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  

      - name: Get IP
        run: ipconfig getifaddr en0

      - name: Cache Public IP
        run: echo "ENV_IPADDRESS=$(ipconfig getifaddr en0)" >> $GITHUB_ENV

      - name: Test IP
        run: echo $ENV_IPADDRESS
          
      - name: Setup Docker
        run: |
         brew install docker
         brew install colima
         colima start --runtime docker --vm-type=qemu --memory 4 --cpu 2 --disk 100 --i=ghcr.io/abiosoft/colima-qemu:latest

      - name: Pull images
        run: |
         docker pull stuartferguson/messagingservice:master
         docker pull stuartferguson/securityservice:master
         docker pull stuartferguson/transactionprocessor:master
         docker pull stuartferguson/transactionprocessoracl:master
         docker pull stuartferguson/testhosts:master
         docker pull stuartferguson/mobileconfiguration:master
         docker pull mcr.microsoft.com/azure-sql-edge
         docker pull eventstore/eventstore:21.10.0-buster-slim
      
      - name: List Available iOS Simulators
        run: xcrun simctl list devices

      - name: Start iOS Simulator
        run: |
          UDID=$(xcrun simctl create "Test-iPhone" "com.apple.CoreSimulator.SimDeviceType.iPhone-15-Pro" "com.apple.CoreSimulator.SimRuntime.iOS-17-4")
          echo "Simulator UDID: $UDID"
          xcrun simctl boot "$UDID"
          sleep 15 # Allow time for boot

      - name: Wait for iOS Simulator to Boot
        run: |
          timeout 180 bash -c '
          while true; do
            STATUS=$(xcrun simctl list devices | grep "Test-iPhone" | grep "(Booted)")
            if [ ! -z "$STATUS" ]; then
              echo "Simulator is booted!"
              break
            fi
            echo "Waiting for simulator..."
            sleep 5
          done
          '

      - name: Install Appium and WebDriverAgent
        run: |
          npm install -g appium
          appium driver install xcuitest

      - name: Start Appium Server
        run: |
          nohup appium --log appium.log &

      - name: Restore MAUI App for iOS
        run: dotnet restore TransactionMobile.Maui.sln --source ${{ secrets.PUBLICFEEDURL }} --source ${{ secrets.PRIVATEFEED_URL }}

      - name: Build MAUI App for iOS
        run: dotnet build TransactionMobile.Maui/TransactionMobile.Maui.csproj -f net8.0-ios -c Release --no-restore

      - name: Run Appium Tests (iOS)
        run: dotnet test TransactionMobile.Maui.UiTests/TransactionMobile.Maui.UiTests.csproj --filter "(Category=PRTest)&(Category=iOS)"

      - name: Upload Logs on Failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
            name: ios-test-logs
            path: appium.log
