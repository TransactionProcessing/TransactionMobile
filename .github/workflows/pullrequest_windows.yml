name: Build & Test Pull Requests - Windows

on:
  pull_request:
    branches: 
    - main

env:
  DOTNET_NOLOGO: true                     # Disable the .NET logo
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true # Disable the .NET first time experience
  DOTNET_CLI_TELEMETRY_OPTOUT: true       # Disable sending .NET CLI telemetry
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

jobs:
  build-windows-unit-tests:
    runs-on: windows-2022
    name: Windows Build - Unit Tests
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1
        with:
          vs-prerelease: true

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 8.0.x              
           
      - name: Install MAUI Workloads
        run: |
          dotnet workload install maui --ignore-failed-sources
      
      - name: Restore Dependencies
        run: dotnet restore TransactionMobile.Maui.sln

      - name: Build Code
        run: dotnet build TransactionMobile.Maui/TransactionMobile.Maui.csproj -c Release -f net8.0-windows10.0.19041.0 --no-restore    

      - name: Run Unit Tests
        run: dotnet test TransactionMobile.Maui.BusinessLogic.Tests/TransactionMobile.Maui.BusinessLogic.Tests.csproj
        
  build-windows-nondocker:
    runs-on: windows-2022    
    name: Windows Build - Navigation Tests
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1
        with:
          vs-prerelease: true

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 8.0.x              
           
      - name: Install MAUI Workloads
        run: |
          dotnet workload install maui --ignore-failed-sources

      - name: Set up Appium
        run: |
          npm install -g appium --unsafe-perm=true --allow-root
          appium driver install --source=npm appium-windows-driver

      - name: Restore Dependencies
        run: dotnet restore TransactionMobile.Maui.sln

      - name: Build Code
        run: dotnet build TransactionMobile.Maui/TransactionMobile.Maui.csproj -c Release -f net8.0-windows10.0.19041.0 --no-restore    

      - name: Decrypt PFX File
        run: |
          echo "${{ secrets.WINDOWSSIGNINGCERT }}" > cert.pfx.asc
          certutil -decode cert.pfx.asc cert.pfx

      - name: Add Cert to Store
        run: certutil -user -q -p ${{ secrets.WINDOWSSIGNINGCERTPWD }} -importpfx cert.pfx NoRoot

      - name: Publish App
        run: |
         dotnet publish TransactionMobile.Maui/TransactionMobile.Maui.csproj -c Release -f net8.0-windows10.0.19041.0 /p:AppxPackageSigningEnabled=true /p:PackageCertificateThumbprint="${{ secrets.WINDOWSSIGNINGCERTTHUMBPRINT }}"      
      
      - name: Install App
        shell: powershell
        run: |         
         Import-Module Appx 
         .\TransactionMobile.Maui/bin/Release/net8.0-windows10.0.19041.0/win10-x64/AppPackages/TransactionMobile.Maui_1.0.0.0_Test/Install.ps1 -Force
          
      - name: Run Navigation Integration Tests - Windows
        run: dotnet test TransactionMobile.Maui.UiTests/TransactionMobile.Maui.UiTests.csproj --filter  "Category=PRNavTest&Category=Windows"
              
  build-windows-withdocker:
    runs-on: windows-2019
    name: Windows Build - End To End Tests
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1
        with:
          vs-prerelease: true

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 8.0.x              
           
      - name: Install MAUI Workloads
        run: |
          dotnet workload install maui --ignore-failed-sources

      - name: Set up Appium
        run: |
          npm install -g appium --unsafe-perm=true --allow-root
          appium driver install --source=npm appium-windows-driver

      - name: Restore Dependencies
        run: dotnet restore TransactionMobile.Maui.sln

      - name: Build Code
        run: dotnet build TransactionMobile.Maui/TransactionMobile.Maui.csproj -c Release -f net8.0-windows10.0.19041.0 --no-restore    

      - name: Decrypt PFX File
        run: |
          echo "${{ secrets.WINDOWSSIGNINGCERT }}" > cert.pfx.asc
          certutil -decode cert.pfx.asc cert.pfx

      - name: Add Cert to Store
        run: certutil -user -q -p ${{ secrets.WINDOWSSIGNINGCERTPWD }} -importpfx cert.pfx NoRoot

      - name: Publish App
        run: |
         dotnet publish TransactionMobile.Maui/TransactionMobile.Maui.csproj -c Release -f net8.0-windows10.0.19041.0 /p:AppxPackageSigningEnabled=true /p:PackageCertificateThumbprint="${{ secrets.WINDOWSSIGNINGCERTTHUMBPRINT }}"         
      
      - name: Install App
        shell: powershell
        run: |         
         Import-Module Appx 
         .\TransactionMobile.Maui/bin/Release/net8.0-windows10.0.19041.0/win10-x64/AppPackages/TransactionMobile.Maui_1.0.0.0_Test/Install.ps1 -Force
          
      - name: Run Navigation Integration Tests - Windows
        run: dotnet test TransactionMobile.Maui.UiTests/TransactionMobile.Maui.UiTests.csproj --filter  "Category=PRTest&Category=Windows"

      - uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: tracelogswindows
          path: C:\\Users\\runneradmin\\txnproc