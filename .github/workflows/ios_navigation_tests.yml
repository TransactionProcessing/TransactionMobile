name: Build and Run iOS Navigation Tests

on:
  pull_request:
    branches:
      - main

jobs:
  software_navigation_tests:
    runs-on: macos-14
    env:
      PLATFORM_VERSION: "17.2"
      DEVICE_NAME: "iPhone 15"
      APP_PATH: "./MyTestApp.app"

    steps:
      - name: 🧾 Checkout repo
        uses: actions/checkout@v4

      - name: 🔧 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 🔧 Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: 📦 Install Appium + XCUITest driver
        run: |
          npm install -g appium
          appium driver install xcuitest

      - name: 🧹 Clean DerivedData and WDA cache
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/.appium/node_modules/appium-webdriveragent/Build

      - name: 🧪 Start Appium Server
        run: |
          nohup appium --log appium.log &

      - name: 📱 Create iOS Simulator (if needed)
        run: |
          SIMULATOR_NAME="ci-sim-$RANDOM"
          xcrun simctl create "$SIMULATOR_NAME" "$DEVICE_NAME" "com.apple.CoreSimulator.SimRuntime.iOS-${PLATFORM_VERSION//./-}"
          echo "SIMULATOR_NAME=$SIMULATOR_NAME" >> $GITHUB_ENV

      - name: 🚀 Boot simulator
        run: |
          xcrun simctl boot "$SIMULATOR_NAME"
          SIMULATOR_ID=$(xcrun simctl list | grep 'Booted' | awk -F '[()]' '{print $2}')
          echo "SIMULATOR_ID=$SIMULATOR_ID"
          echo "SIMULATOR_ID=$SIMULATOR_ID" >> $GITHUB_ENV          

      - name: Prime Appium to install WebDriverAgent
        run: |
            #echo "🔧 Starting Appium server in background..."
            #appium --session-override --port 4723 > appium.log 2>&1 &

            #echo "⏳ Waiting for Appium to start..."
            #for i in {1..10}; do
            #  if nc -z localhost 4723; then
            #    echo "✅ Appium server is up."
            #    break
            #  fi
            #  echo "Waiting..."
            #  sleep 2
            #done

            echo "📡 Sending dummy iOS session request to trigger WDA setup..."
            curl -X POST http://localhost:4723/session \
              -H "Content-Type: application/json" \
              -d '{
                "capabilities": {
                  "alwaysMatch": {
                    "platformName": "iOS",
                    "appium:deviceName": "Fake",
                    "appium:platformVersion": "99.9",
                    "appium:automationName": "XCUITest",
                    "appium:app": "dummy"
                  }
                }
              }' || echo "Expected failure — WDA should still be initialized"

            echo "🔍 Checking for WebDriverAgent..."

      - name: Build and launch WebDriverAgent manually
        run: |
            WDA_PROJECT_PATH=$(find ~/.appium -name WebDriverAgent.xcodeproj -print | grep 'appium-webdriveragent' | head -n 1)

            if [ -z "$WDA_PROJECT_PATH" ]; then
              echo "❌ WebDriverAgent.xcodeproj not found"
              exit 1
            fi

            echo "✅ Found WDA project at: $WDA_PROJECT_PATH"

            rm -rf ~/Library/Developer/Xcode/DerivedData/*

            echo "📦 Building WDA..."
            xcodebuild build-for-testing \
              -project "$WDA_PROJECT_PATH" \
              -scheme WebDriverAgentRunner \
              -destination "id=${SIMULATOR_ID}"

            echo "🚀 Launching WDA..."
            xcodebuild test-without-building \
              -project "$WDA_PROJECT_PATH" \
              -scheme WebDriverAgentRunner \
              -destination "id=${SIMULATOR_ID}" \
              -only-testing:WebDriverAgentRunner/WebDriverAgentRunnerUITests/testRunner \
              #> wda.log 2>&1 &
        env:
            SIMULATOR_ID: ${{ env.SIMULATOR_ID }}

      - name: Wait for WDA to be ready
        run: |
            for i in {1..15}; do
              if curl -s http://127.0.0.1:8100/status | grep -q "status"; then
                echo "✅ WDA is up."
                break
              fi
              echo "Waiting for WDA..."
              sleep 4
            done


      #- name: Install MAUI Workloads
      #  run: |
      #    dotnet workload install ios --ignore-failed-sources
      #    dotnet workload install maui --ignore-failed-sources

      #- name: Restore MAUI App for iOS
      #  run: dotnet restore TransactionMobile.Maui.sln --source ${{ secrets.PUBLICFEEDURL }} --source ${{ secrets.PRIVATEFEED_URL }} --source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet6/nuget/v3/index.json

      #- name: Build Code
      #  run: dotnet build TransactionMobile.Maui/TransactionMobile.Maui.csproj  -f net9.0-ios -c Release --no-restore

      #- name: find the app
      #  run: |
      #      find /Users/runner/work -name "*.app"
      #      mkdir -p /Users/runner/work/mobileapp
      #      cp -R /Users/runner/work/TransactionMobile/TransactionMobile/TransactionMobile.Maui/bin/Release/net9.0-ios/iossimulator-arm64/TransactionMobile.Maui.app /Users/runner/work/mobileapp/

      #- name: run the app
      #  run: |
      #      xcrun simctl install booted /Users/runner/work/mobileapp/TransactionMobile.Maui.app
      #      xcrun simctl launch booted com.transactionprocessing.pos
      


      #- name: Run iOS Navigation Tests
      #  run: dotnet test TransactionMobile.Maui.UiTests/TransactionMobile.Maui.UiTests.csproj --filter "(Category=PRNavTest)&(Category=iOS)" --no-restore

      #- name: Upload Appium Logs on Failure      
      #  if: failure()
      #  uses: actions/upload-artifact@v4
      #  with:
      #      name: ios-software_navigation_tests_appium
      #      path: appium.log

  