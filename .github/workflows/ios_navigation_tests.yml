name: Build and Run iOS Navigation Tests

on:
  pull_request:
    branches:
      - main

jobs:
  software_navigation_tests:
    runs-on: macos-14
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2' # Update as needed based on available versions

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '18'

      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Boot Existing iOS Simulator
        run: |
          export UDID=$(xcrun simctl list devices available | grep "iPhone" | grep -oE '([0-9A-F-]{36})' | head -n 1)
          echo "Booting Simulator UDID: $UDID"
          xcrun simctl boot "$UDID"

      - name: Wait for iOS Simulator to Boot
        run: |
          export UDID=$(xcrun simctl list devices booted | grep -oE '([0-9A-F-]{36})' | head -n 1)
          echo "Using Simulator UDID: $UDID"
          xcrun simctl bootstatus "$UDID" -b
          echo "UDID=$UDID" >> $GITHUB_ENV

      - name: Clone WebDriverAgent
        run: |
          git clone https://github.com/appium/WebDriverAgent.git
          cd WebDriverAgent
          git checkout v9.4.1

      - name: Build WebDriverAgent for Simulator
        run: |
          set -e
          export UDID=$UDID
          echo "Target Simulator UDID: $UDID"

          # Navigate into WebDriverAgent
          cd WebDriverAgent
          mkdir -p build

          echo "Building WebDriverAgentRunner with code signing for simulator..."
          xcodebuild -scheme WebDriverAgentRunner \
            -destination "id=$UDID" \
            -derivedDataPath build \
            -configuration Debug \
            -allowProvisioningUpdates \
            CODE_SIGN_IDENTITY="-" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO \
            build-for-testing | xcpretty

          echo "Checking built app architecture..."
          APP_PATH="build/Build/Products/Debug-iphonesimulator/WebDriverAgentRunner-Runner.app/WebDriverAgentRunner"
          
          if [ -f "$APP_PATH" ]; then
            lipo -info "$APP_PATH"
          else
            echo "::error::WebDriverAgentRunner binary not found at expected path: $APP_PATH"
            exit 1
          fi
      
      - name: Debug WebDriverAgent App Install and Bundle ID
        run: |
          echo "Checking WebDriverAgentRunner app..."

          echo "Simulator UDID: $UDID"
          APP_PATH="WebDriverAgent/build/Build/Products/Debug-iphonesimulator/WebDriverAgentRunner-Runner.app"

          echo "Checking bundle identifier..."
          BUNDLE_ID=$(/usr/libexec/PlistBuddy -c "Print CFBundleIdentifier" "$APP_PATH/Info.plist")
          echo "Extracted Bundle ID: $BUNDLE_ID"

          echo "Installing WDA app to simulator..."
          xcrun simctl install "$UDID" "$APP_PATH"

          echo "Verifying install..."
          INSTALLED_APPS=$(xcrun simctl get_app_container "$UDID" "$BUNDLE_ID" 2>&1 || echo "App not found")
          echo "App container: $INSTALLED_APPS"

          echo "Launching WebDriverAgent..."
          xcrun simctl launch "$UDID" "$BUNDLE_ID"

      - name: Install Appium XCUITest Driver from GitHub
        run: |
          npm install -g appium --unsafe-perm=true --allow-root
          appium driver install --source=git --package=appium-xcuitest-driver https://github.com/appium/appium-xcuitest-driver.git

      - name: Start Appium Server
        run: |
          nohup appium --log appium.log &

      - name: Install MAUI Workloads
        run: |
          dotnet workload install ios --ignore-failed-sources
          dotnet workload install maui --ignore-failed-sources

      - name: Restore MAUI App for iOS
        run: dotnet restore TransactionMobile.Maui.sln --source ${{ secrets.PUBLICFEEDURL }} --source ${{ secrets.PRIVATEFEED_URL }} --source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet6/nuget/v3/index.json

      - name: Build Code
        run: dotnet build TransactionMobile.Maui/TransactionMobile.Maui.csproj  -f net8.0-ios -c Release --no-restore

      - name: Run iOS Navigation Tests
        run: dotnet test TransactionMobile.Maui.UiTests/TransactionMobile.Maui.UiTests.csproj --filter "(Category=PRNavTest)&(Category=iOS)" --no-restore

      - name: Upload Appium Logs on Failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
            name: ios-software_navigation_tests_appium
            path: appium.log

  